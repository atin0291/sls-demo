org: hitachi12
service: sls-demo

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  environment:
    TABLE_NAME: PostsTable
    BUCKET_NAME: sls-demo-bucket-${sls:stage} # dynamic bucket name
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
        - dynamodb:Scan
      Resource:
        - arn:aws:dynamodb:ap-south-1:*:table/PostsTable
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - arn:aws:s3:::sls-demo-bucket-${sls:stage}/*
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        - arn:aws:s3:::sls-demo-bucket-${sls:stage}

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /test-sls
          method: get

  createPost:
    handler: handler.createPost
    events:
      - httpApi:
          path: /posts
          method: post

  getPost:
    handler: handler.getPost
    events:
      - httpApi:
          path: /posts/{id}
          method: get

  deletePost:
    handler: handler.deletePost
    events:
      - httpApi:
          path: /posts/{id}
          method: delete

  uploadFile: # âœ… New Lambda for S3 upload
    handler: handler.uploadFile
    events:
      - httpApi:
          path: /upload
          method: post
  getFile:
    handler: handler.getFile
    events:
      - httpApi:
          path: /file/{fileName}
          method: get

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PostsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: sls-demo-bucket-${sls:stage}
